#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*link;
};
void count_nodes(struct node *head){
    int count=0;
    if(head==NULL){
        printf("ll is empty");
    }
    else {
        struct node*ptr;
        ptr=head;
        while(ptr!=NULL){
            count++;
            
            ptr=ptr->link;
            
        }
        printf(" the nodes are %d \n",count);
    }
}
void print_data(struct node*head){
     if(head==NULL){
        printf("ll is empty");
    }
    else{
        struct node*ptr;
        ptr=head;
        while(ptr!=NULL){
            printf(" the data is %d \n",ptr->data);
            ptr=ptr->link;
        }
    }
}
void add_at_end(struct node*head ,int data){
    struct node*current2,*ptr;
    ptr=head;
    
    current2=malloc(sizeof(struct node));
    current2->data=data;
    current2->link=NULL;
    while(ptr->link!=NULL){
        ptr=ptr->link;}
   ptr->link=current2;
    
}
void add_at_beg(struct node**head,int data){
    struct node*temp,*ptr;
    temp=malloc(sizeof(struct node));
    temp->data=data;
 
    temp->link=*head;
    *head=temp;
    
}
void add_at_poss(struct node*head,int poss,int data){
    struct node*temp,*ptr;
    ptr=head;
    temp=malloc(sizeof(struct node));
    temp->data=data;
    temp->link=NULL;
    poss--;
    while(poss!=1){
        ptr=ptr->link;
        poss--;
    }
    temp->link=ptr->link;
    ptr->link=temp;
    
}
struct node *del_beg(struct node *head){
    if(head == NULL){
        printf("linked list is empty");
        }
else {
    struct node *ptr;
    ptr=head;
    head=head->link;
    free(ptr);
    ptr=NULL;}
    return head;
   
}
struct node *del_last(struct node * head){
    if(head == NULL){
        printf("linked list is empty");
        }
        else if(head->link==NULL) {
            free(head);
            head=NULL;
            
        }
        else {
            struct node *ptr;
            ptr=head;
            while(ptr->link!=NULL){
                
            }
        }
}
int main(){
    struct node*head;
  head=malloc(sizeof(struct node));
   head->data=200;
    head->link=NULL;
    struct node*current;
    current=malloc(sizeof(struct node));
    current->data=100;
    current->link=NULL;
   head->link=current;
   struct node*current3;
   current3=malloc(sizeof(struct node));
   current3->data=400;
   current3->link=NULL;
   head->link->link=current3;
   count_nodes(head);
 
   print_data(head);
     add_at_end(head,900);
       
        count_nodes(head);
        print_data(head);
        add_at_beg(&head,20);
        
        print_data(head);
         add_at_poss(head,2,90);
        print_data(head);
       head= del_beg(head);

         print_data(head);
   return 0;
}
